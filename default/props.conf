##
## SPDX-FileCopyrightText: 2021 Splunk, Inc. <sales@splunk.com>
## SPDX-License-Identifier: LicenseRef-Splunk-8-2021
##
##
[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*splunk_ta_salesforce_sfdc_object*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = sfdc:object:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*splunk_ta_salesforce_sfdc_event_log*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = sfdc:eventlog:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*splunk_ta_salesforce_utils.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = sfdc:utils
priority = 1

#####################################
###         Event Log             ###
#####################################
[sfdc:logfile]
TIME_FORMAT = %Y-%m-%dT%H:%M:%S
category = Splunk App Add-on Builder
TZ = UTC

EVAL-app = "sfdc"
EVAL-vendor_product = "sfdc"
EVAL-action = case((EVENT_TYPE="URI" OR EVENT_TYPE="RestApi" OR EVENT_TYPE="VisualforceRequest") AND REQUEST_STATUS=="S", "OK", \
			(EVENT_TYPE="URI" OR EVENT_TYPE="RestApi" OR EVENT_TYPE="VisualforceRequest") AND REQUEST_STATUS=="A", "Unauthorized", \
			(EVENT_TYPE="URI" OR EVENT_TYPE="RestApi" OR EVENT_TYPE="VisualforceRequest") AND REQUEST_STATUS=="R", "Found", \
			(EVENT_TYPE="URI" OR EVENT_TYPE="RestApi" OR EVENT_TYPE="VisualforceRequest") AND REQUEST_STATUS=="N", "Not Found", \
			(EVENT_TYPE="URI" OR EVENT_TYPE="RestApi" OR EVENT_TYPE="VisualforceRequest") AND REQUEST_STATUS=="F", "Bad Request", \
			(EVENT_TYPE="URI" OR EVENT_TYPE="RestApi" OR EVENT_TYPE="VisualforceRequest") AND REQUEST_STATUS=="U", "Undefined", \
			(EVENT_TYPE="URI" OR EVENT_TYPE="RestApi" OR EVENT_TYPE="VisualforceRequest"), "unknown", \
			EVENT_TYPE="Login" AND LOGIN_STATUS="LOGIN_NO_ERROR", "success",EVENT_TYPE="Login" AND LOGIN_STATUS!="LOGIN_NO_ERROR", "failure", \
			EVENT_TYPE="Logout", "logoff", HTTP_METHOD="GET" or HTTP_METHOD="HEAD", "read", HTTP_METHOD="POST", "created", HTTP_METHOD="PUT" or HTTP_METHOD="PATCH", "modified", HTTP_METHOD="DELETE", "deleted", \
			METHOD="GET" or METHOD="HEAD", "read", METHOD="POST", "created", METHOD="PUT" or METHOD="PATCH", "modified", METHOD="DELETE", "deleted", like(METHOD_NAME, "%insert%"), "created", \
			like(METHOD_NAME, "%update%"), "modified", like(METHOD_NAME, "%delete%"), "deleted", like(METHOD_NAME, "%query%"), "read", like(METHOD_NAME, "%retrieve%"), "read", like(METHOD_NAME, "%get%"), "read", true(), "unknown")

EVAL-user_type = case(EVENT_TYPE="Logout" AND USER_TYPE=="A", "Automated Process", EVENT_TYPE="Logout" AND USER_TYPE=="b", "High Volume Portal",\
					EVENT_TYPE="Logout" AND USER_TYPE=="C", "Customer Portal User", EVENT_TYPE="Logout" AND USER_TYPE=="D", "External Who", \
					EVENT_TYPE="Logout" AND USER_TYPE=="F", "Self-Service", EVENT_TYPE="Logout" AND USER_TYPE=="G", "Guest", \
					EVENT_TYPE="Logout" AND USER_TYPE=="L", "Package License Manager", EVENT_TYPE="Logout" AND USER_TYPE=="N", "Salesforce to Salesforce", \
					EVENT_TYPE="Logout" AND USER_TYPE=="n", "CSN Only", EVENT_TYPE="Logout" AND USER_TYPE=="O", "Power Custom", \
					EVENT_TYPE="Logout" AND USER_TYPE=="o", "Custom", EVENT_TYPE="Logout" AND USER_TYPE=="P", "Partner", \
					EVENT_TYPE="Logout" AND USER_TYPE=="p", "Customer Portal Manager", EVENT_TYPE="Logout" AND USER_TYPE=="S", "Standard", \
					EVENT_TYPE="Logout" AND USER_TYPE=="X", "Salesforce Administrator", EVENT_TYPE="Logout", USER_TYPE, true(), null())


EVAL-object_attrs = case(EVENT_TYPE="Logout" AND USER_TYPE=="A", "Automated Process", EVENT_TYPE="Logout" AND USER_TYPE=="b", "High Volume Portal",\
					EVENT_TYPE="Logout" AND USER_TYPE=="C", "Customer Portal User", EVENT_TYPE="Logout" AND USER_TYPE=="D", "External Who", \
					EVENT_TYPE="Logout" AND USER_TYPE=="F", "Self-Service", EVENT_TYPE="Logout" AND USER_TYPE=="G", "Guest", \
					EVENT_TYPE="Logout" AND USER_TYPE=="L", "Package License Manager", EVENT_TYPE="Logout" AND USER_TYPE=="N", "Salesforce to Salesforce", \
					EVENT_TYPE="Logout" AND USER_TYPE=="n", "CSN Only", EVENT_TYPE="Logout" AND USER_TYPE=="O", "Power Custom", \
					EVENT_TYPE="Logout" AND USER_TYPE=="o", "Custom", EVENT_TYPE="Logout" AND USER_TYPE=="P", "Partner", \
					EVENT_TYPE="Logout" AND USER_TYPE=="p", "Customer Portal Manager", EVENT_TYPE="Logout" AND USER_TYPE=="S", "Standard", \
					EVENT_TYPE="Logout" AND USER_TYPE=="X", "Salesforce Administrator", EVENT_TYPE="Logout", USER_TYPE, true(), null())

EVAL-result = case(REQUEST_STATUS=="S", "Success", REQUEST_STATUS=="A", "Authorization Error", REQUEST_STATUS=="R", "Redirect", REQUEST_STATUS=="N", "Not Found", REQUEST_STATUS=="F", "Failure", REQUEST_STATUS=="U", "Undefined", true(), "unknown")
EVAL-status = case(EVENT_TYPE="RestApi", STATUS_CODE , EVENT_TYPE="API" AND REQUEST_STATUS=="S", "success", EVENT_TYPE="API" AND (REQUEST_STATUS!="" AND isnotnull(REQUEST_STATUS)), "failure", EVENT_TYPE="API", "unknown", EVENT_TYPE="Logout", "success", REQUEST_STATUS=="S", 200, REQUEST_STATUS=="A", 401, REQUEST_STATUS=="R", 302, REQUEST_STATUS=="N", 404, REQUEST_STATUS=="F", 400, REQUEST_STATUS=="U", 306, true(), "unknown")
EVAL-bytes_in = if(REQUEST_SIZE=="-1", 0, REQUEST_SIZE)
EVAL-bytes_out = if(RESPONSE_SIZE=="-1", 0, RESPONSE_SIZE)
EVAL-bytes = case(REQUEST_SIZE=="-1" AND RESPONSE_SIZE=="-1", 0, RESPONSE_SIZE=="-1", REQUEST_SIZE, REQUEST_SIZE=="-1", RESPONSE_SIZE, true(), REQUEST_SIZE+RESPONSE_SIZE)
EVAL-category = if(EVENT_TYPE="RestApi", MEDIA_TYPE, EVENT_TYPE)
EVAL-http_method = if(isnotnull(HTTP_METHOD), HTTP_METHOD, METHOD)
EVAL-change_type = if(EVENT_TYPE="Logout","AAA", null())
EVAL-command = if(EVENT_TYPE="Logout","Web", QUERY)
EVAL-dvc = if(EVENT_TYPE="Logout",  rtrim(ltrim(SplunkRetrievedServer, "https://"), "/"), null())
EVAL-http_content_type = if(MEDIA_TYPE != "" AND isnotnull(MEDIA_TYPE), MEDIA_TYPE, "application")
EVAL-response_time = if(EVENT_TYPE="Login" AND isnum(RUN_TIME), RUN_TIME/1000, RUN_TIME)
EVAL-dest=  rtrim(ltrim(SplunkRetrievedServer, "https://"), "/")

EVAL-dest_port = if((EVENT_TYPE="RestApi" OR EVENT_TYPE="VisualforceRequest"), 443, null())
EVAL-duration = if(EVENT_TYPE="Login",RUN_TIME/1000,RUN_TIME)
EVAL-object = if(EVENT_TYPE="Logout", USER_ID, ENTITY_NAME)
EVAL-object_category = if(EVENT_TYPE="Logout", "user", null())
EVAL-object_id = if(EVENT_TYPE="Logout", USER_ID, null())
EVAL-src = if(EVENT_TYPE="Login", SOURCE_IP, CLIENT_IP)
FIELDALIAS-uri_path = URI AS uri_path
FIELDALIAS-uri_query = QUERY AS uri_query
EVAL-url = if(match(URI, "^(\/.*)$"), SplunkRetrievedServer.URI, URI)
EVAL-url_domain = case(match(SplunkRetrievedServer, "^(\d+\.\d+\.\d+\.\d+)\/?"), null(), match(SplunkRetrievedServer, "^\[?([^\-\/]*:[^\-\/\]]*:[^\-\/\]]*)\]?\/?"), null(), match(SplunkRetrievedServer, "^(?:[^\.]+\.([^:\/]+\.[^:\/\.]+))\/?.*"), replace(SplunkRetrievedServer, "^(?:[^\.]+\.([^:\/]+\.[^:\/\.]+))\/?.*", "\1"), true(), replace(SplunkRetrievedServer, "^(?:\w*:\/\/)?([^:\/]+\.?[^:\/]+)\/?.*", "\1"))
EVAL-user = case(EVENT_TYPE="Login", USER_NAME, true(), USER_ID)
EVAL-user_id = case(EVENT_TYPE="Login", USER_ID, isnotnull(user_id), user_id, true(), null())
EVAL-user_agent = if(EVENT_TYPE="Logout" OR EVENT_TYPE="Login", BROWSER_TYPE, null())
EVAL-src_user = if(EVENT_TYPE="Logout", USER_ID, null())
EVAL-vendor_account = if(EVENT_TYPE="Logout", ORGANIZATION_ID, null())

LOOKUP-SFDC-USER_NAME1 = lookup_sfdc_usernames USER_ID AS USER_ID OUTPUTNEW UserId FirstName City AS profile_city Country AS profile_country IsActive LastLoginDate LastName MobilePhone Name PostalCode State Username UserRoleId UserType Email Email AS user CompanyName ProfileId Profile:PermissionsApiEnabled AS Profile.PermissionsApiEnabled Profile:PermissionsModifyAllData AS Profile.PermissionsModifyAllData Profile:PermissionsViewSetup AS Profile.PermissionsViewSetup
LOOKUP-SFDC-USER_AGENT_scripted = lookup_sfdc_user_agent_scripted USER_AGENT OUTPUTNEW http_user_agent http_user_agent_length


#####################################
###           Objects             ###
#####################################
[sfdc:dashboard]
DATETIME_CONFIG = NONE
MAX_TIMESTAMP_LOOKAHEAD = 0
category = Splunk App Add-on Builder
TZ = UTC


[sfdc:user]
DATETIME_CONFIG = NONE
MAX_TIMESTAMP_LOOKAHEAD = 0
category = Splunk App Add-on Builder
TZ = UTC


[sfdc:account]
DATETIME_CONFIG = NONE
MAX_TIMESTAMP_LOOKAHEAD = 0
category = Splunk App Add-on Builder
TZ = UTC


[sfdc:object]
DATETIME_CONFIG = NONE
MAX_TIMESTAMP_LOOKAHEAD = 0
category = Splunk App Add-on Builder
TZ = UTC


[sfdc:opportunity]
DATETIME_CONFIG = NONE
MAX_TIMESTAMP_LOOKAHEAD = 0
category = Splunk App Add-on Builder
TZ = UTC


[sfdc:loginhistory]
DATETIME_CONFIG = NONE
MAX_TIMESTAMP_LOOKAHEAD = 0
category = Splunk App Add-on Builder
TZ = UTC

EVAL-action = if(Status=="Success", "success", "failure")
EVAL-app = "sfdc"
EVAL-vendor_product = "sfdc"
EVAL-reason = if(Status=="Success", null(), Status)
FIELDALIAS-dest = LoginUrl AS dest
FIELDALIAS-dest_host = LoginUrl AS dest_host
FIELDALIAS-signature_id = Id AS signature_id
FIELDALIAS-src = SourceIp AS src
FIELDALIAS-user_id = UserId AS user_id
FIELDALIAS-user_agent = Browser AS user_agent

LOOKUP-SFDC-USER_NAME = lookup_sfdc_usernames UserId AS UserId OUTPUTNEW FirstName City AS profile_city Country AS profile_country IsActive LastLoginDate LastName MobilePhone Name PostalCode State Username UserRoleId UserType Email Email AS user CompanyName ProfileId Profile:PermissionsApiEnabled AS Profile.PermissionsApiEnabled Profile:PermissionsModifyAllData AS Profile.PermissionsModifyAllData Profile:PermissionsViewSetup AS Profile.PermissionsViewSetup


[sfdc:report]
DATETIME_CONFIG = NONE
MAX_TIMESTAMP_LOOKAHEAD = 0
category = Splunk App Add-on Builder
TZ = UTC

[sfdc:contentversion]
DATETIME_CONFIG = NONE
MAX_TIMESTAMP_LOOKAHEAD = 0
category = Splunk App Add-on Builder
TZ = UTC
